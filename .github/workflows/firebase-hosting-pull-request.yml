# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_deploy_client:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Print Secrets (Debug)
        run: |
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"
          echo "FIREBASE_SERVICE_ACCOUNT_MEDCALL_CLIENT=${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEDCALL_CLIENT }}"
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}"

      - name: Ensure medcall-client Directory Exists
        run: mkdir -p Phase-B/medcall-client

      - name: Get .env.production file for medcall-client
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
        run: |
          echo "VITE_API_BASE_URL=${VITE_API_BASE_URL}" > Phase-B/medcall-client/.env.production
          echo "VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}" >> Phase-B/medcall-client/.env.production
          echo "VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}" >> Phase-B/medcall-client/.env.production
          echo "VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}" >> Phase-B/medcall-client/.env.production
          echo "VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}" >> Phase-B/medcall-client/.env.production
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}" >> Phase-B/medcall-client/.env.production
          echo "VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}" >> Phase-B/medcall-client/.env.production
          echo "VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}" >> Phase-B/medcall-client/.env.production
          echo "VITE_API_KEY=${VITE_API_KEY}" >> Phase-B/medcall-client/.env.production
          echo "Created .env.production file with the following content:"
          cat Phase-B/medcall-client/.env.production

      - name: List medcall-client Directory Contents
        run: ls -la Phase-B/medcall-client

      # Build the client and print environment variables
      - run: |
          npm ci
          npm run build
        working-directory: Phase-B/medcall-client

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEDCALL_CLIENT }}
          projectId: medcall-client
          entryPoint: Phase-B/medcall-client
          channelId: pr-${{ github.event.pull_request.number }}

  build_and_deploy_server:
    runs-on: ubuntu-latest
    needs: build_and_deploy_client
    steps:
      - uses: actions/checkout@v3
  
      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies for server functions
      - name: Install dependencies
        run: npm ci
        working-directory: Phase-B/medcall-server/functions

         # Install Firebase Tools
      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      # Ensure firebase.json exists in the correct directory
      - name: List medcall-server Directory Contents
        run: ls -la Phase-B/medcall-server

      # Create .env.production file for medcall-server
      - name: Create .env.production file for medcall-server
        env:
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD : ${{ secrets.EMAIL_PASSWORD }}
        run: |
          mkdir -p Phase-B/medcall-server/functions 
          echo "MONGODB_URL=${MONGODB_URL}" > Phase-B/medcall-server/functions/.env.production
          echo "JWT_SECRET_KEY=${JWT_SECRET_KEY}" >> Phase-B/medcall-server/functions/.env.production
          echo "EMAIL=${EMAIL}" >> Phase-B/medcall-server/functions/.env.production
          echo "EMAIL_PASSWORD=${EMAIL_PASSWORD}" >> Phase-B/medcall-server/functions/.env.production
          echo "Created .env.production file with the following content:"
          cat Phase-B/medcall-server/functions/.env.production

    # Deploy to Firebase Functions
      - name: Deploy to Firebase Functions
        run: firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}
        working-directory: Phase-B/medcall-server

